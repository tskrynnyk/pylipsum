#!/usr/bin/env python

import requests
import xml.etree.ElementTree as ET
from optparse import OptionParser

def get_lipsum(howmany, what, start_with_lipsum):
    url = "https://www.lipsum.com/feed/xml"

    params = {
            "amount": str(howmany),
            "what": what,
            "start": start_with_lipsum
    }

    f = requests.get(url, params=params)

    xml = ET.fromstring(f.content)

    lorem = xml.find('lipsum')

    #for i in xml.iter('lipsum'):
    #    print(l.text)

    return lorem.text.replace('\n','\n\n')

get_lipsum.__doc__ = """Get lorem ipsum text from lipsum.com. Parameters:
howmany: how many items to get
what: the type of the items [paras/words/bytes/lists]
start_with_lipsum: whether or not you want the returned text to start with Lorem ipsum [yes/no]
Returns a tuple with the generated text on the 0 index and generation statistics on index 1"""

if __name__ == "__main__":
    from optparse import OptionParser
    optionParser = OptionParser()
    optionParser.add_option(
            "-n","--howmany",
            type="int",
            dest="howmany",
            metavar="X",
            help="how many items to get"
            )
    whatChoices = ('paras','words','bytes','lists')
    optionParser.add_option(
            "-w","--what",
            choices=whatChoices,
            dest="what",
            metavar="TYPE",
            help="the type of items to get: " + ', '.join(whatChoices)
            )
    optionParser.add_option(
            "-l","--start-with-Lorem",
            action="store_true",
            dest="lipsum",
            help='Start the text with "Lorem ipsum"'
            )
    optionParser.set_defaults(
            lipsum=False,
            howmany=5,
            what="paras"
            )
    (opts,args) = optionParser.parse_args()
    if 3 == len(args): # for backward compatibility with arg-only version
        opts.howmany = args[0]
        opts.what = args[1]
        opts.lipsum = 'yes' == args[2]
    lipsum = get_lipsum(
            opts.howmany, opts.what,
            'yes' if opts.lipsum else 'no'
            )

    print(lipsum)
